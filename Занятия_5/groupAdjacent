#include <iostream>
#include <vector>
std::vector<std::vector<int>> groupAdjacent(std::vector<int> & vec) {
    std::vector<std::vector<int>> result;
    
    std::vector<int> CurrentVector;
    CurrentVector.push_back(vec[0]);
    for (int i = 1 ; i < vec.size() ;i++) {
        if (vec[i] == vec[i-1]) {
            CurrentVector.push_back(vec[i]);
        }
        else{
            result.push_back(CurrentVector);
            CurrentVector.clear();
            CurrentVector.push_back(vec[i]);
        }
    }
    result.push_back(CurrentVector);
    return result;
}
int main()
{
    std::vector<int> vec { 4, 5 , 5 , 2 , 2 , 2 , 2 , 5 , 5};
    std::vector<std::vector<int>> groups_vector = groupAdjacent(vec);
    for (auto& group : groups_vector) {
        std::cout << "{ ";
        for (int& element : group) {
            std::cout << element << " ";
        }
        std::cout << "} ";
    }
    
    return 0;
}
